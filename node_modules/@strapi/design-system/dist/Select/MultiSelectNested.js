'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const styled = require('styled-components');
const MultiSelect = require('./MultiSelect.js');

const _interopDefault = e => e && e.__esModule ? e : { default: e };

const styled__default = /*#__PURE__*/_interopDefault(styled);

const MultiSelectNested = ({ options, ...props }) => {
    return (jsxRuntime.jsx(MultiSelect.MultiSelect, { ...props, children: options.map((opt) => {
            if ('children' in opt) {
                return (jsxRuntime.jsx(MultiSelect.MultiSelectGroup, { label: opt.label, values: opt.children.map((child) => child.value.toString()), children: opt.children.map((child) => (jsxRuntime.jsx(NestedOption, { value: child.value, children: child.label }, child.value))) }, opt.label));
            }
            return (jsxRuntime.jsx(MultiSelect.MultiSelectOption, { value: opt.value, children: opt.label }, opt.value));
        }) }));
};
const NestedOption = styled__default.default(MultiSelect.MultiSelectOption) `
  padding-left: ${({ theme }) => theme.spaces[7]};
`;

exports.MultiSelectNested = MultiSelectNested;

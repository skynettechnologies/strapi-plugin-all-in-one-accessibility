{"version":3,"file":"formik.esm.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx","../src/FastField.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n\n  // check if path is not in the end\n  if (p !== path.length && !obj) {\n    return def;\n  }\n\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nFormikContext.displayName = 'FormikContext';\n\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FormikHelpers,\n  FormikHandlers,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const schema = getValidationSchema(props.validationSchema);\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n        if (validateOnMount) {\n          validateFormWithHighPriority(initialValues.current);\n        }\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: getIn(error, name) },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : options && multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    const schema = getValidationSchema(props.validationSchema);\n    const actualizedValues =\n      schema && schema.cast ? schema.cast(state.values) : state.values;\n\n    return onSubmit(actualizedValues, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction getValidationSchema<Values extends FormikValues = FormikValues>(\n  validationSchema?: FormikConfig<Values>['validationSchema']\n) {\n  if (!validationSchema) {\n    return;\n  }\n\n  return isFunction(validationSchema) ? validationSchema() : validationSchema;\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context?: any\n): Promise<Partial<T>> {\n  const normalizedValues: FormikValues = prepareDataForValidation(values);\n\n  return schema[sync ? 'validateSync' : 'validate'](normalizedValues, {\n    abortEarly: false,\n    context: context || normalizedValues,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<V>>\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<V>['field']>\n    | string\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & { name: string };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  const fieldHelpers = React.useMemo(() => getFieldHelpers(fieldName), [\n    getFieldHelpers,\n    fieldName,\n  ]);\n\n  return [getFieldProps(props), getFieldMeta(fieldName), fieldHelpers];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action ?? '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik helpers + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form status\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form errors state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import cloneDeep from 'lodash/cloneDeep';\nimport * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikProps,\n  FormikState,\n  SharedRenderProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyArray,\n  isEmptyChildren,\n  isFunction,\n  isObject,\n  setIn,\n} from './utils';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n  /** Override FieldArray's default shouldComponentUpdate */\n  shouldUpdate?: (nextProps: {}, props: {}) => boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers<T extends any[] = any[]> {\n  /** Imperatively add a value to the end of an array */\n  push<X = T[number]>(obj: X): void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush<X = T[number]>(obj: X): () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert<X = T[number]>(index: number, value: X): void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert<X = T[number]>(index: number, value: X): () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace<X = T[number]>(index: number, value: X): void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace<X = T[number]>(index: number, value: X): () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift<X = T[number]>(value: X): number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift<X = T[number]>(value: X): () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<X = T[number]>(index: number): X | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<X = T[number]>(): X | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = <T,>(array: T[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = <T,>(\n  arrayLike: ArrayLike<T>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = <T,>(\n  arrayLike: ArrayLike<T>,\n  index: number,\n  value: T\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = <T,>(\n  arrayLike: ArrayLike<T>,\n  index: number,\n  value: T\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nconst createAlterationHandler = (\n  alteration: boolean | Function,\n  defaultFunction: Function\n) => {\n  const fn = typeof alteration === 'function' ? alteration : defaultFunction;\n\n  return (data: any | any[]) => {\n    if (Array.isArray(data) || isObject(data)) {\n      const clone = copyArrayLike(data);\n      return fn(clone);\n    }\n\n    // This can be assumed to be a primitive, which\n    // is a case for top level validation errors\n    return data;\n  };\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  shouldComponentUpdate(props: any) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = createAlterationHandler(alterErrors, fn);\n      let updateTouched = createAlterationHandler(alterTouched, fn);\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        // if the array only includes undefined values we have to return an empty array\n        return isFunction(copy.every)\n          ? copy.every(v => v === undefined)\n            ? []\n            : copy\n          : copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array.slice();\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = formik.getFieldProps({ name, ...props });\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n"],"names":["isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","then","isInputEvent","target","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","FormikContext","displayName","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","invariant","formikReducer","state","msg","type","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","dispatch","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","actualException","process","env","NODE_ENV","console","warn","runValidationSchema","schema","getValidationSchema","validationSchema","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithHighPriority","useEventCallback","resetForm","nextState","dispatchFn","onReset","maybePromisedOnReset","imperativeMethods","validateField","maybePromise","x","error","registerField","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","parsed","persist","currentTarget","id","checked","outerHTML","options","multiple","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","Error","isActuallyValid","promiseOrUndefined","executeSubmit","result","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","reason","validateForm","actualizedValues","cast","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","valueProp","is","as","indexOf","dirty","isValid","ctx","Formik","formikbag","component","render","innerRef","only","yupError","inner","message","sync","context","normalizedValues","prepareDataForValidation","abortEarly","data","hasOwnProperty","isPlainObject","source","destination","forEach","merge","cloneRequested","shouldClone","isMergeableObject","push","from","el","selected","currentValue","Boolean","currentArrayOfValues","isValueInArray","concat","useIsomorphicLayoutEffect","window","createElement","fn","ref","args","apply","useField","propsOrFieldName","fieldName","validateFn","fieldHelpers","Field","_validate","meta","legacyBag","form","asElement","Form","action","_action","withFormik","mapPropsToValues","vanillaProps","config","createFormik","Component","componentDisplayName","constructor","C","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","to","copy","copyArrayLike","splice","swap","arrayLike","indexA","indexB","a","insert","replace","maxIndex","parseInt","max","createAlterationHandler","alteration","defaultFunction","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","fieldError","fieldTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","shouldComponentUpdate","shouldUpdate","componentDidUpdate","prevProps","every","v","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessageImpl","touch","ErrorMessage","FastFieldInner","componentDidMount","componentWillUnmount","bag","FastField"],"mappings":"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"}